{
  "version": 3,
  "sources": ["../../../dataTables/testTable/create-row.ts"],
  "sourcesContent": ["import { columns } from '@heswell/viewserver/dist/dataTables/testTable/columns';\nconst groups = {\n  group1: ['Group-1', 'Group-2', 'Group-3', 'Group-4', 'Group-5'],\n  group2: ['Group-6', 'Group-7', 'Group-8', 'Group-9', 'Group-10']\n};\n\nlet incrementor = 0;\n\nfunction oneOf(group, index) {\n  var values = groups[group];\n\n  if (values) {\n    if (typeof index === 'number') {\n      return values[index];\n    } else {\n      var idx = parseInt(values.length * Math.random());\n      return values[idx];\n    }\n  } else {\n    return 'test';\n  }\n}\n\nfunction padLeftZero(n, places) {\n  return ('000000' + n).slice(-places);\n}\n\nfunction defaultColumnValue(column, idx) {\n  if (column.name === 'Column-1') {\n    const root = 'Key';\n    return `${root}-${padLeftZero(idx, 5)}`;\n  } else if (column.name === 'Column-2') {\n    return `description of ${padLeftZero(idx, 5)}`;\n  } else if (column.type === 'number') {\n    return 1000;\n  } else if (column.type === 'increment') {\n    return incrementor++;\n  } else if (column.name === 'Timestamp') {\n    return new Date().toISOString();\n  } else if (idx > 20 && column.name === 'Column-7') {\n    return oneOf('group2');\n  } else if (column.value) {\n    if (idx > 14) {\n      return oneOf(column.value, 0);\n    } else {\n      return oneOf(column.value);\n    }\n  } else {\n    return `text-${idx}`;\n  }\n}\n\n// const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n// function randomName(idx) {\n//     return [\n//         alphabet[Math.round(Math.random() * 25)],\n//         alphabet[Math.round(Math.random() * 25)],\n//         alphabet[Math.round(Math.random() * 25)]\n//     ].join('')\n// }\n\nexport function createRow(idx) {\n  const row = {};\n  columns.forEach((column) => {\n    row[column.name] = defaultColumnValue(column, idx);\n  });\n  return row;\n}\n"],
  "mappings": "AAAA,SAAS,eAAe;AACxB,MAAM,SAAS;AAAA,EACb,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,EAC9D,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,UAAU;AACjE;AAEA,IAAI,cAAc;AAElB,SAAS,MAAM,OAAO,OAAO;AAC3B,MAAI,SAAS,OAAO;AAEpB,MAAI,QAAQ;AACV,QAAI,OAAO,UAAU,UAAU;AAC7B,aAAO,OAAO;AAAA,IAChB,OAAO;AACL,UAAI,MAAM,SAAS,OAAO,SAAS,KAAK,OAAO,CAAC;AAChD,aAAO,OAAO;AAAA,IAChB;AAAA,EACF,OAAO;AACL,WAAO;AAAA,EACT;AACF;AAEA,SAAS,YAAY,GAAG,QAAQ;AAC9B,UAAQ,WAAW,GAAG,MAAM,CAAC,MAAM;AACrC;AAEA,SAAS,mBAAmB,QAAQ,KAAK;AACvC,MAAI,OAAO,SAAS,YAAY;AAC9B,UAAM,OAAO;AACb,WAAO,GAAG,QAAQ,YAAY,KAAK,CAAC;AAAA,EACtC,WAAW,OAAO,SAAS,YAAY;AACrC,WAAO,kBAAkB,YAAY,KAAK,CAAC;AAAA,EAC7C,WAAW,OAAO,SAAS,UAAU;AACnC,WAAO;AAAA,EACT,WAAW,OAAO,SAAS,aAAa;AACtC,WAAO;AAAA,EACT,WAAW,OAAO,SAAS,aAAa;AACtC,WAAO,IAAI,KAAK,EAAE,YAAY;AAAA,EAChC,WAAW,MAAM,MAAM,OAAO,SAAS,YAAY;AACjD,WAAO,MAAM,QAAQ;AAAA,EACvB,WAAW,OAAO,OAAO;AACvB,QAAI,MAAM,IAAI;AACZ,aAAO,MAAM,OAAO,OAAO,CAAC;AAAA,IAC9B,OAAO;AACL,aAAO,MAAM,OAAO,KAAK;AAAA,IAC3B;AAAA,EACF,OAAO;AACL,WAAO,QAAQ;AAAA,EACjB;AACF;AAWO,SAAS,UAAU,KAAK;AAC7B,QAAM,MAAM,CAAC;AACb,UAAQ,QAAQ,CAAC,WAAW;AAC1B,QAAI,OAAO,QAAQ,mBAAmB,QAAQ,GAAG;AAAA,EACnD,CAAC;AACD,SAAO;AACT;",
  "names": []
}
