{
  "version": 3,
  "sources": ["../../src/store/selection-model.ts"],
  "sourcesContent": ["export const CHECKBOX = 'checkbox';\nexport const SINGLE_ROW = 'single-row';\nexport const MULTIPLE_ROW = 'multiple-row';\n\nexport const SelectionModelType = {\n  Checkbox: CHECKBOX,\n  SingleRow: SINGLE_ROW,\n  MultipleRow: MULTIPLE_ROW\n};\n\nconst {Checkbox, SingleRow, MultipleRow} = SelectionModelType;\n\nconst EMPTY = [];\n\nexport function selectionDiffers(selected1, selected2){\n  const len = selected1.length;\n  if (len !== selected2.length){\n      return true;\n  }\n  for (let i=0;i<len;i++){\n      if (selected1[i] !== selected2[i]){\n          return true;\n      }\n  }\n  return false;\n}\n\nexport default class SelectionModel {\n\n    constructor(selectionModelType=MultipleRow){\n      this.modelType = selectionModelType;\n    }\n\n    select({rows:selection, lastTouchIdx}, idx, rangeSelect, keepExistingSelection){\n        \n        let selected, deselected;\n\n        if (this.modelType === SingleRow){\n            [selection, selected, deselected] = this.handleRegularSelection(selection, idx);\n            lastTouchIdx = idx;\n        } else if (rangeSelect){\n            [selection, selected, deselected] = this.handleRangeSelection(selection, lastTouchIdx, idx);\n        } else if (keepExistingSelection || this.modelType === Checkbox){\n            [selection, selected, deselected] = this.handleIncrementalSelection(selection, idx);\n            lastTouchIdx = idx;\n        } else {\n            [selection, selected, deselected] = this.handleRegularSelection(selection, idx);\n            lastTouchIdx = idx;\n        }\n\n        return {\n          focusedIdx: idx,\n          lastTouchIdx,\n          rows: selection,\n          selected,\n          deselected\n        };\n\n    }\n\n    handleRegularSelection(selected, idx){\n        const pos = selected.indexOf(idx);\n        if (pos === -1){\n            const selection = [idx];\n            return [selection, selection, selected];\n        } else if (selected.length === 1){\n            return [EMPTY, EMPTY, selected];\n        } else {\n          return [EMPTY, EMPTY, remove(selected,idx)];\n        }\n    }\n\n    handleIncrementalSelection(selected, idx){\n        const pos = selected.indexOf(idx);\n        const len = selected.length;\n        const selection = [idx];\n\n        if (pos === -1){\n          if (len === 0){\n              return [selection, selection,EMPTY];\n            } else {\n                return [insert(selected,idx), selection, EMPTY];\n            }\n        } else {\n            if (len === 1){\n                return [EMPTY, EMPTY, selected];\n            } else {\n                return [remove(selected,idx), EMPTY, selection];\n            }\n        }\t\t\n    }\n\n    handleRangeSelection(selected, lastTouchIdx, idx){\n\n        const pos = selected.indexOf(idx);\n        const len = selected.length;\n\n        if (pos === -1){\n\n            if (len === 0){\n                const selection = makeRange(0,idx);\n                return [selection, selection, EMPTY];\n            } else if (len === 1){\n                const selection = makeRange(selected[0],idx);\n                selected = selected[0] < idx\n                  ? selection.slice(1)\n                  : selection.slice(0,-1);\n                return [selection, selected, EMPTY];\n            } else {\n                const selection = applyRange(selected,lastTouchIdx,idx);\n                return [selection, selection.filter(i => !selected.includes(i)), EMPTY];\n            }\n        } else {\n          // TODO <<<<<<<<<<<<<<<<<\n        }\n    }\n\n};\n\nfunction applyRange(arr, lo, hi){\n\n    if (lo > hi) {[lo, hi] = [hi, lo];}\n\n    const ranges = getRanges(arr);\n    const newRange = new Range(lo,hi);\n    let newRangeAdded = false;\n    const ret = [];\n\n    for (let i=0;i<ranges.length;i++){\n        const range = ranges[i];\n\n        if (!range.overlaps(newRange)){\n            if (range.start < newRange.start){\n                for (let idx=range.start;idx<=range.end;idx++){\n                    ret.push(idx);\n                }\n            } else {\n                for (let idx=newRange.start;idx<=newRange.end;idx++){\n                    ret.push(idx);\n                }\n                newRangeAdded = true;\n                for (let idx=range.start;idx<=range.end;idx++){\n                    ret.push(idx);\n                }\n            }\n        } else if (!newRangeAdded){\n            for (let idx=newRange.start;idx<=newRange.end;idx++){\n                ret.push(idx);\n            }\n            newRangeAdded = true;\n        }\n    }\n\n    if (!newRangeAdded){\n        for (let idx=newRange.start;idx<=newRange.end;idx++){\n            ret.push(idx);\n        }\n    }\n\n    return ret;\n}\n\nfunction getRanges(arr){\n\n    const ranges = [];\n    let range;\n\n    for (let i=0;i<arr.length;i++){\n        if (range && range.touches(arr[i])){\n            range.extend(arr[i]);\n        } else {\n            ranges.push(range = new Range(arr[i]));\n        }\n    }\n\n    return ranges;\n\n}\n\nclass Range {\n\n    constructor(start, end=start){\n        this.start = start;\n        this.end = end;\n    }\n\n    extend(idx){\n        if (idx >= this.start && idx > this.end){\n            this.end = idx;\n        }\n    }\n\n    touches(idx){\n        return this.end === idx-1;\n    }\n\n    overlaps(that){\n        return !(this.end < that.start || this.start > that.end);\n    }\n\n    contains(idx){\n        return this.start <= idx && this.end >= idx;\n    }\n\n    toString(){\n        return `[${this.start}:${this.end}]`;\n    }\n}\n\nfunction makeRange(lo, hi){\n    if (lo > hi) {[lo, hi] = [hi, lo];}\n\n    const range = [];\n    for (let idx=lo;idx<=hi;idx++){\n        range.push(idx);\n    }\n    return range;\n}\n\nfunction remove(arr, idx){\n    const ret = [];\n    for (let i=0;i<arr.length;i++){\n        if (idx !== arr[i]){\n            ret.push(arr[i]);\n        }\n    }\n    return ret;\n}\n\nfunction insert(arr, idx){\n    const ret = [];\n    for (let i=0;i<arr.length;i++){\n        if (idx !== null && idx < arr[i]){\n            ret.push(idx);\n            idx = null;\n        }\n        ret.push(arr[i]);\n    }\n    if (idx !== null){\n        ret.push(idx);\n    }\n    return ret;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],
  "mappings": "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",
  "names": []
}
