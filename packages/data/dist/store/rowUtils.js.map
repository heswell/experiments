{
  "version": 3,
  "sources": ["../../src/store/rowUtils.ts"],
  "sourcesContent": ["\nexport function isEmptyRow(row){\n    return row[0] === undefined;\n}\n\nexport function indexRows(rows, indexField) {\n    return addRowsToIndex(rows, {}, indexField)\n}\n\nexport function addRowsToIndex(rows, index, indexField){\n    for (let idx = 0, len=rows.length; idx < len; idx++) {\n        index[rows[idx][indexField]] = idx;\n    }\n    return index;\n}\n\nexport function update(rows, updates, {IDX}) {\n    const results = rows.slice();\n\n    for (let i = 0; i < updates.length; i++) {\n        const [idx, ...fieldUpdates] = updates[i];\n        // slow, refactor for performance\n\n        let row;\n        for (let ii = 0; ii < rows.length; ii++) {\n            if (rows[ii][IDX] === idx) {\n                row = rows[ii].slice();\n                for (let j = 0; j < fieldUpdates.length; j += 2) {\n                    row[fieldUpdates[j]] = fieldUpdates[j + 1];\n                }\n                results[ii] = row;\n\n                break;\n\n            }\n        }\n    }\n\n    return results;\n}\n\n\n// TODO create a pool of these and reuse them\nfunction emptyRow(idx, {IDX, count}){\n    const row = Array(count);\n    row[IDX] = idx;\n    return row;\n}\n\nexport function arrayOfIndices(length){\n    // not the neatest, but far and away the fastest way to do this ...\n    const result = Array(length);\n    for (let i=0;i<length;i++){\n        result[i] = i;\n    }\n    return result;\n}\n\n"],
  "mappings": "AACO,SAAS,WAAW,KAAI;AAC3B,SAAO,IAAI,OAAO;AACtB;AAEO,SAAS,UAAU,MAAM,YAAY;AACxC,SAAO,eAAe,MAAM,CAAC,GAAG,UAAU;AAC9C;AAEO,SAAS,eAAe,MAAM,OAAO,YAAW;AACnD,WAAS,MAAM,GAAG,MAAI,KAAK,QAAQ,MAAM,KAAK,OAAO;AACjD,UAAM,KAAK,KAAK,eAAe;AAAA,EACnC;AACA,SAAO;AACX;AAEO,SAAS,OAAO,MAAM,SAAS,EAAC,IAAG,GAAG;AACzC,QAAM,UAAU,KAAK,MAAM;AAE3B,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,UAAM,CAAC,QAAQ,YAAY,IAAI,QAAQ;AAGvC,QAAI;AACJ,aAAS,KAAK,GAAG,KAAK,KAAK,QAAQ,MAAM;AACrC,UAAI,KAAK,IAAI,SAAS,KAAK;AACvB,cAAM,KAAK,IAAI,MAAM;AACrB,iBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK,GAAG;AAC7C,cAAI,aAAa,MAAM,aAAa,IAAI;AAAA,QAC5C;AACA,gBAAQ,MAAM;AAEd;AAAA,MAEJ;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO;AACX;AAIA,SAAS,SAAS,KAAK,EAAC,KAAK,MAAK,GAAE;AAChC,QAAM,MAAM,MAAM,KAAK;AACvB,MAAI,OAAO;AACX,SAAO;AACX;AAEO,SAAS,eAAe,QAAO;AAElC,QAAM,SAAS,MAAM,MAAM;AAC3B,WAAS,IAAE,GAAE,IAAE,QAAO,KAAI;AACtB,WAAO,KAAK;AAAA,EAChB;AACA,SAAO;AACX;",
  "names": []
}
