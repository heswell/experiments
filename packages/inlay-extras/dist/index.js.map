{"version":3,"file":"index.js","sources":["../src/layoutConfigurator.jsx","../src/layout-tree-viewer/staticTabs.jsx","../src/layout-tree-viewer/layoutTreeViewer.jsx"],"sourcesContent":["import React from 'react'\nimport {normalizeLayoutStyles} from '@heswell/finlay'\nimport './layoutConfigurator.css'\n\nconst DIMENSIONS = {\n    margin: {\n        top: 'marginTop',\n        right: 'marginRight',\n        bottom: 'marginBottom',\n        left: 'marginLeft'\n    },\n    border: {\n        top: 'borderTopWidth',\n        right: 'borderRightWidth',\n        bottom: 'borderBottomWidth',\n        left: 'borderLeftWidth'\n    },\n    padding: {\n        top: 'paddingTop',\n        right: 'paddingRight',\n        bottom: 'paddingBottom',\n        left: 'paddingLeft'\n    }\n}\n\nconst LayoutBox = ({feature, children, style, onChange}) => {\n    return (\n        <div className={`LayoutBox layout-${feature} layout-outer`}>\n            <div className={`layout-top`}>\n                <span className='layout-title'>{feature}</span>\n                <input className='layout-input'\n                    value={style.top}\n                    onChange={e => onChange(feature,'top', parseInt(e.target.value,10))}/>\n            </div>\n            <div className={`layout-inner`}>\n                <div className={`layout-left`}>\n                    <input className='layout-input'\n                        value={style.left}\n                        onChange={e => onChange(feature,'left', e.target.value)}/>\n                </div>\n                {children}\n                <div className={`layout-right`}>\n                    <input className='layout-input'\n                        value={style.right}\n                        onChange={e => onChange(feature,'right', e.target.value)}/>\n                </div>\n            </div>\n            <div className={`layout-bottom`}>\n                <input className='layout-input'\n                    value={style.bottom}\n                    onChange={e => onChange(feature,'bottom', e.target.value)}/>\n            </div>\n        </div>\n    )\n}\n\nexport default class LayoutConfigurator extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            layoutStyle: normalizeLayoutStyles(props.layoutStyle)\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if (nextProps.layoutStyle !== this.props.layoutStyle){\n            this.setState({\n                layoutStyle: normalizeLayoutStyles(nextProps.layoutStyle)\n            });\n        }\n    }\n\n    handleChange(feature, dimension, strValue){\n        const value = parseInt(strValue || '0',10);\n        const {layoutStyle} = this.state;\n        const property = DIMENSIONS[feature][dimension];\n        this.setState({\n            layoutStyle: {\n                ...layoutStyle,\n                [property]: value\n            }\n        }, () => {\n            this.props.onChange(feature, dimension, value, this.state.layoutStyle)\n        });\n    }\n\n    render(){\n        const {width, height, style} = this.props\n        const {marginTop: mt=0, marginRight: mr=0, marginBottom: mb=0, marginLeft: ml=0} = this.state.layoutStyle;\n        const {borderTopWidth: bt=0, borderRightWidth: br=0, borderBottomWidth: bb=0, borderLeftWidth: bl=0} = this.state.layoutStyle;\n        const {paddingTop: pt=0, paddingRight: pr=0, paddingBottom: pb=0, paddingLeft: pl=0} = this.state.layoutStyle;\n        return (\n            <div className='LayoutConfigurator' style={{width, height, ...style}}>\n                <LayoutBox feature='margin' style={{top: mt, right: mr, bottom: mb, left: ml}} onChange={this.handleChange}>\n                    <LayoutBox feature='border' style={{top: bt, right: br, bottom: bb, left: bl}} onChange={this.handleChange}>\n                        <LayoutBox feature='padding' style={{top: pt, right: pr, bottom: pb, left: pl}} onChange={this.handleChange}>\n                            <div className='layout-content' />\n                        </LayoutBox>\n                    </LayoutBox>\n                </LayoutBox>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport cx from 'classnames';\nimport './staticTabs.css'\n\nconst Slide = ({firstNode, onClick}) =>\n    firstNode\n        ? <div className='node-slide'/>\n        : <div className='node-slide active'>{`<`}</div>\n\nexport default class LayoutTabs extends React.Component {\n    constructor(props){\n        super(props)\n        this.onClick = this.onClick.bind(this);\n\n    }\n    render(){\n        const {trail, selectedNode} = this.props;\n        const last = trail.length - 1;\n        return (\n            <div className='LayoutTabs'>\n                {trail.map((node,i) =>\n                    <div key={node.$path} className={cx('node',{selected: node === selectedNode})}>\n                        <Slide firstNode={i === 0} />\n                        <div className='node-path' onClick={() => this.onClick(node,i === last)}>{node.$path}</div>\n                        <div className='node-label' onClick={() => this.onClick(node,i === last)}>{node.type}</div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n\n    onClick(node, isLast){\n        if (isLast){\n            this.props.onSelect(node);\n        } else {\n            this.props.onNavigate(node)\n        }\n    }\n\n}\n","import React from 'react';\nimport cx from 'classnames';\nimport Tabs from './staticTabs.jsx';\nimport {breadcrumb} from '@heswell/finlay'\n\nimport './layoutTreeViewer.css';\n\nconst LTR = 'ltr';\nconst RTL = 'rtl';\nconst NO_STYLE = {};\n\nconst Toggle = ({leafNode, expanded, onToggle}) =>\n    leafNode\n        ? <div className='toggle-node'/>\n        : <div className='toggle-node active' onClick={() => onToggle(!expanded)}>{expanded ? '-' : '+'}</div>\n\nconst Slide = ({leafNode, onClick}) =>\n    leafNode\n        ? <div className='node-slide'/>\n        : <div className='node-slide active' onClick={onClick}>{`>`}</div>\n\nconst Node = ({root, model, expanded, onToggle, onSelect, onSlide, selected}) => {\n    const leafNode = !hasChildren(model);\n    return (\n        <div className={cx('node', {selected})}>\n            <Toggle leafNode={leafNode} expanded={expanded} onToggle={onToggle} />\n            <div className='node-label' onClick={() => onSelect(model)}>{`${model.$path} ${model.type}`}</div>\n            <Slide leafNode={leafNode} onClick={() => onSlide(model)} />\n        </div>\n    )\n}\n\nclass TreeNode extends React.Component {\n    constructor(props){\n\n        super(props);\n        this.rootEl = null;\n        this.state = {expanded: props.expanded || false, collapsing: false};\n        this.toggleNode = this.toggleNode.bind(this);\n    }\n    render(){\n        const {model, root, onSelect, onSlide, showRoot=true, selectedNode} = this.props;\n        const {expanded, collapsing} = this.state;\n        return (\n            <div className={cx('node-container',{root})} ref={el => this.rootEl = el}>\n                {showRoot &&\n                <Node\n                    model={model}\n                    root={root}\n                    expanded={expanded}\n                    selected={selectedNode === model}\n                    onToggle={this.toggleNode}\n                    onSelect={onSelect}\n                    onSlide={onSlide}/>}\n                {(expanded || collapsing || !showRoot) && model.children &&\n                    <div className={cx('node-children',{expanded: this.props.expanded})}>\n                        <div className='node-children-inner-container'>\n                            {model.children.map((child,i) =>\n                                <TreeNode\n                                    key={i}\n                                    root={false}\n                                    model={child}\n                                    selectedNode={selectedNode}\n                                    onSelect={onSelect}\n                                    onSlide={onSlide}/>)}\n                        </div>\n                    </div>}\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevvProps, prevState){\n        let childContainer;\n\n        function transitionEnd(){\n            childContainer.classList.replace('expanding','expanded');\n            childContainer.style.height = 'auto';\n            childContainer.removeEventListener('transitionend',transitionEnd);\n        }\n\n        const transitionEnd2 = () => {\n            childContainer.classList.remove('collapsing','expanded');\n            childContainer.removeEventListener('transitionend',transitionEnd2);\n            this.setState({expanded: false, collapsing: false});\n        }\n\n        if (this.state.expanded && prevState.expanded === false){\n            childContainer = this.rootEl.querySelector('.node-children')\n            const {clientHeight} = childContainer.firstChild;\n            childContainer.classList.add('expanding');\n            childContainer.style.height = `${clientHeight}px`;\n            childContainer.addEventListener('transitionend',transitionEnd)\n        } else if (prevState.expanded && this.state.expanded === false){\n            childContainer = this.rootEl.querySelector('.node-children')\n            const {clientHeight} = childContainer.firstChild;\n            childContainer.classList.add('collapsing');\n            childContainer.style.height = `${clientHeight}px`;\n            setTimeout(() => {\n                childContainer.style.height = `0px`;\n                childContainer.addEventListener('transitionend',transitionEnd2)\n            },100)\n        }\n    }\n\n    toggleNode(expanded){\n        if (expanded === false){\n            this.setState({expanded, collapsing: true})\n        } else {\n            this.setState({expanded, collapsing: false})\n        }\n    }\n}\n\nexport default class LayoutTreeViewer extends React.Component {\n    constructor(props){\n        super(props);\n        this.slideContainer = null\n        this.state = {\n            rootNode: props.tree,\n            currentNode: props.tree,\n            trail: breadcrumb(props.tree, '0'),\n            zoomNode: null,\n            zoomDirection: null,\n            selectedNode: null\n        };\n\n        this.selectNode = this.selectNode.bind(this);\n        this.slideNode = this.slideNode.bind(this);\n        this.slideBack = this.slideBack.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        const {tree} = nextProps;\n        if (tree !== this.props.tree){\n            this.setState({\n                rootNode: tree,\n                currentNode: tree,\n                trail: breadcrumb(tree, tree.$path),\n                zoomNode: null,\n                zoomDirection: null,\n                selectedNode: null\n            });\n        }\n    }\n\n    render() {\n        const {currentNode, zoomNode, zoomDirection, trail, selectedNode} = this.state;\n        const {width, height, style=NO_STYLE,tree=null} = this.props;\n        const isRoot = currentNode === tree;\n        if (tree === null){\n            return <div className='LayoutTreeViewer' style={{...style, width, height}} />;\n        }\n        return (\n            <div className='LayoutTreeViewer' style={{width, height}}>\n                <div className='parent-row'>\n                    <Tabs trail={trail} onNavigate={this.slideBack} onSelect={this.selectNode} selectedNode={selectedNode}/>\n                </div>\n                <div className='slide-container' ref={el => this.slideContainer = el}>\n                    <div className={zoomDirection === RTL ? 'slide slide-1' : 'slide slide-3'}>\n                        <TreeNode\n                            model={currentNode}\n                            root={isRoot}\n                            selectedNode={selectedNode}\n                            showRoot={false}\n                            expanded={true}\n                            onSelect={this.selectNode}\n                            onSlide={this.slideNode}/>\n                    </div>\n                    {zoomNode &&\n                    <div className={zoomDirection === RTL ? 'slide slide-2' : 'slide slide-4'}>\n                        <TreeNode model={zoomNode} root={false} showRoot={false} expanded={true}/>\n                    </div>}\n                </div>\n            </div>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        const animationEnd = () => {\n            this.slideContainer.classList.remove('sliding');\n            this.setState({currentNode: this.state.zoomNode, zoomNode: null, zoomDirection: null});\n            this.slideContainer.firstChild.removeEventListener('transitionend', animationEnd);\n        }\n        if (prevState.zoomNode === null && this.state.zoomNode !== null){\n            setTimeout(() => {\n                this.slideContainer.classList.add('sliding')\n                this.slideContainer.firstChild.addEventListener('transitionend', animationEnd);\n            }, 100)\n        }\n    }\n\n    selectNode(selectedNode){\n        this.setState({selectedNode});\n        if (this.props.onSelectNode){\n            this.props.onSelectNode(selectedNode);\n        }\n    }\n\n    slideNode(model){\n        const trail = breadcrumb(this.state.rootNode, model.$path);\n        this.setState({zoomNode: model, zoomDirection: RTL, trail})\n    }\n\n    slideBack(model){\n        const trail = breadcrumb(this.state.rootNode, model.$path);\n        this.setState({zoomNode: model, zoomDirection: LTR, trail})\n    }\n\n}\n\nconst hasChildren = model => model.children && model.children.length > 0;\n"],"names":["DIMENSIONS","margin","top","right","bottom","left","border","padding","LayoutBox","feature","children","style","onChange","e","parseInt","target","value","LayoutConfigurator","React","Component","constructor","props","state","layoutStyle","normalizeLayoutStyles","handleChange","bind","componentWillReceiveProps","nextProps","setState","dimension","strValue","property","render","width","height","marginTop","mt","marginRight","mr","marginBottom","mb","marginLeft","ml","borderTopWidth","bt","borderRightWidth","br","borderBottomWidth","bb","borderLeftWidth","bl","paddingTop","pt","paddingRight","pr","paddingBottom","pb","paddingLeft","pl","Slide","firstNode","onClick","LayoutTabs","trail","selectedNode","last","length","map","node","i","$path","cx","selected","type","isLast","onSelect","onNavigate","LTR","RTL","NO_STYLE","Toggle","leafNode","expanded","onToggle","Node","root","model","onSlide","hasChildren","TreeNode","rootEl","collapsing","toggleNode","showRoot","el","child","componentDidUpdate","prevvProps","prevState","childContainer","transitionEnd","classList","replace","removeEventListener","transitionEnd2","remove","querySelector","clientHeight","firstChild","add","addEventListener","setTimeout","LayoutTreeViewer","slideContainer","rootNode","tree","currentNode","breadcrumb","zoomNode","zoomDirection","selectNode","slideNode","slideBack","isRoot","Tabs","prevProps","animationEnd","onSelectNode"],"mappings":";;;;AAIA,MAAMA,UAAU,GAAG;EACfC,MAAM,EAAE;IACJC,GAAG,EAAE,WADD;IAEJC,KAAK,EAAE,aAFH;IAGJC,MAAM,EAAE,cAHJ;IAIJC,IAAI,EAAE;GALK;EAOfC,MAAM,EAAE;IACJJ,GAAG,EAAE,gBADD;IAEJC,KAAK,EAAE,kBAFH;IAGJC,MAAM,EAAE,mBAHJ;IAIJC,IAAI,EAAE;GAXK;EAafE,OAAO,EAAE;IACLL,GAAG,EAAE,YADA;IAELC,KAAK,EAAE,cAFF;IAGLC,MAAM,EAAE,eAHH;IAILC,IAAI,EAAE;;CAjBd;;AAqBA,MAAMG,SAAS,GAAG,CAAC;EAACC,OAAD;EAAUC,QAAV;EAAoBC,KAApB;EAA2BC;CAA5B,KAA0C;SAEpD;IAAK,SAAS,EAAG,oBAAmBH,OAAQ;KACxC;IAAK,SAAS,EAAG;KACb;IAAM,SAAS,EAAC;KAAgBA,OAAhC,CADJ,EAEI;IAAO,SAAS,EAAC,cAAjB;IACI,KAAK,EAAEE,KAAK,CAACT,GADjB;IAEI,QAAQ,EAAEW,CAAC,IAAID,QAAQ,CAACH,OAAD,EAAS,KAAT,EAAgBK,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,EAAgB,EAAhB,CAAxB;IAJ/B,CADJ,EAOI;IAAK,SAAS,EAAG;KACb;IAAK,SAAS,EAAG;KACb;IAAO,SAAS,EAAC,cAAjB;IACI,KAAK,EAAEL,KAAK,CAACN,IADjB;IAEI,QAAQ,EAAEQ,CAAC,IAAID,QAAQ,CAACH,OAAD,EAAS,MAAT,EAAiBI,CAAC,CAACE,MAAF,CAASC,KAA1B;IAH/B,CADJ,EAMKN,QANL,EAOI;IAAK,SAAS,EAAG;KACb;IAAO,SAAS,EAAC,cAAjB;IACI,KAAK,EAAEC,KAAK,CAACR,KADjB;IAEI,QAAQ,EAAEU,CAAC,IAAID,QAAQ,CAACH,OAAD,EAAS,OAAT,EAAkBI,CAAC,CAACE,MAAF,CAASC,KAA3B;IAH/B,CAPJ,CAPJ,EAoBI;IAAK,SAAS,EAAG;KACb;IAAO,SAAS,EAAC,cAAjB;IACI,KAAK,EAAEL,KAAK,CAACP,MADjB;IAEI,QAAQ,EAAES,CAAC,IAAID,QAAQ,CAACH,OAAD,EAAS,QAAT,EAAmBI,CAAC,CAACE,MAAF,CAASC,KAA5B;IAH/B,CApBJ,CADJ;CADJ;;AA+BA,AAAe,MAAMC,kBAAN,SAAiCC,KAAK,CAACC,SAAvC,CAAiD;EAC5DC,WAAW,CAACC,KAAD,EAAO;UACRA,KAAN;SACKC,KAAL,GAAa;MACTC,WAAW,EAAEC,qBAAqB,CAACH,KAAK,CAACE,WAAP;KADtC;SAGKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;;;EAGJC,yBAAyB,CAACC,SAAD,EAAW;QAC5BA,SAAS,CAACL,WAAV,KAA0B,KAAKF,KAAL,CAAWE,WAAzC,EAAqD;WAC5CM,QAAL,CAAc;QACVN,WAAW,EAAEC,qBAAqB,CAACI,SAAS,CAACL,WAAX;OADtC;;;;EAMRE,YAAY,CAAChB,OAAD,EAAUqB,SAAV,EAAqBC,QAArB,EAA8B;UAChCf,KAAK,GAAGF,QAAQ,CAACiB,QAAQ,IAAI,GAAb,EAAiB,EAAjB,CAAtB;UACM;MAACR;QAAe,KAAKD,KAA3B;UACMU,QAAQ,GAAGhC,UAAU,CAACS,OAAD,CAAV,CAAoBqB,SAApB,CAAjB;SACKD,QAAL,CAAc;MACVN,WAAW,EAAE,EACT,GAAGA,WADM;SAERS,QAAD,GAAYhB;;KAHpB,EAKG,MAAM;WACAK,KAAL,CAAWT,QAAX,CAAoBH,OAApB,EAA6BqB,SAA7B,EAAwCd,KAAxC,EAA+C,KAAKM,KAAL,CAAWC,WAA1D;KANJ;;;EAUJU,MAAM,GAAE;UACE;MAACC,KAAD;MAAQC,MAAR;MAAgBxB;QAAS,KAAKU,KAApC;UACM;MAACe,SAAS,EAAEC,EAAE,GAAC,CAAf;MAAkBC,WAAW,EAAEC,EAAE,GAAC,CAAlC;MAAqCC,YAAY,EAAEC,EAAE,GAAC,CAAtD;MAAyDC,UAAU,EAAEC,EAAE,GAAC;QAAK,KAAKrB,KAAL,CAAWC,WAA9F;UACM;MAACqB,cAAc,EAAEC,EAAE,GAAC,CAApB;MAAuBC,gBAAgB,EAAEC,EAAE,GAAC,CAA5C;MAA+CC,iBAAiB,EAAEC,EAAE,GAAC,CAArE;MAAwEC,eAAe,EAAEC,EAAE,GAAC;QAAK,KAAK7B,KAAL,CAAWC,WAAlH;UACM;MAAC6B,UAAU,EAAEC,EAAE,GAAC,CAAhB;MAAmBC,YAAY,EAAEC,EAAE,GAAC,CAApC;MAAuCC,aAAa,EAAEC,EAAE,GAAC,CAAzD;MAA4DC,WAAW,EAAEC,EAAE,GAAC;QAAK,KAAKrC,KAAL,CAAWC,WAAlG;WAEI;MAAK,SAAS,EAAC,oBAAf;MAAoC,KAAK,EAAE;QAACW,KAAD;QAAQC,MAAR;WAAmBxB;;OAC1D,oBAAC,SAAD;MAAW,OAAO,EAAC,QAAnB;MAA4B,KAAK,EAAE;QAACT,GAAG,EAAEmC,EAAN;QAAUlC,KAAK,EAAEoC,EAAjB;QAAqBnC,MAAM,EAAEqC,EAA7B;QAAiCpC,IAAI,EAAEsC;OAA1E;MAA+E,QAAQ,EAAE,KAAKlB;OAC1F,oBAAC,SAAD;MAAW,OAAO,EAAC,QAAnB;MAA4B,KAAK,EAAE;QAACvB,GAAG,EAAE2C,EAAN;QAAU1C,KAAK,EAAE4C,EAAjB;QAAqB3C,MAAM,EAAE6C,EAA7B;QAAiC5C,IAAI,EAAE8C;OAA1E;MAA+E,QAAQ,EAAE,KAAK1B;OAC1F,oBAAC,SAAD;MAAW,OAAO,EAAC,SAAnB;MAA6B,KAAK,EAAE;QAACvB,GAAG,EAAEmD,EAAN;QAAUlD,KAAK,EAAEoD,EAAjB;QAAqBnD,MAAM,EAAEqD,EAA7B;QAAiCpD,IAAI,EAAEsD;OAA3E;MAAgF,QAAQ,EAAE,KAAKlC;OAC3F;MAAK,SAAS,EAAC;MADnB,CADJ,CADJ,CADJ,CADJ;;;;;ACxFR,MAAMmC,KAAK,GAAG,CAAC;EAACC,SAAD;EAAYC;CAAb,KACVD,SAAS,GACH;EAAK,SAAS,EAAC;EADZ,GAEH;EAAK,SAAS,EAAC;GAAsB,GAArC,CAHV;;AAKA,AAAe,MAAME,UAAN,SAAyB7C,KAAK,CAACC,SAA/B,CAAyC;EACpDC,WAAW,CAACC,KAAD,EAAO;UACRA,KAAN;SACKyC,OAAL,GAAe,KAAKA,OAAL,CAAapC,IAAb,CAAkB,IAAlB,CAAf;;;EAGJO,MAAM,GAAE;UACE;MAAC+B,KAAD;MAAQC;QAAgB,KAAK5C,KAAnC;UACM6C,IAAI,GAAGF,KAAK,CAACG,MAAN,GAAe,CAA5B;WAEI;MAAK,SAAS,EAAC;OACVH,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAMC,CAAN,KACP;MAAK,GAAG,EAAED,IAAI,CAACE,KAAf;MAAsB,SAAS,EAAEC,EAAE,CAAC,MAAD,EAAQ;QAACC,QAAQ,EAAEJ,IAAI,KAAKJ;OAA5B;OAC/B,oBAAC,KAAD;MAAO,SAAS,EAAEK,CAAC,KAAK;MAD5B,EAEI;MAAK,SAAS,EAAC,WAAf;MAA2B,OAAO,EAAE,MAAM,KAAKR,OAAL,CAAaO,IAAb,EAAkBC,CAAC,KAAKJ,IAAxB;OAAgCG,IAAI,CAACE,KAA/E,CAFJ,EAGI;MAAK,SAAS,EAAC,YAAf;MAA4B,OAAO,EAAE,MAAM,KAAKT,OAAL,CAAaO,IAAb,EAAkBC,CAAC,KAAKJ,IAAxB;OAAgCG,IAAI,CAACK,IAAhF,CAHJ,CADH,CADL,CADJ;;;EAaJZ,OAAO,CAACO,IAAD,EAAOM,MAAP,EAAc;QACbA,MAAJ,EAAW;WACFtD,KAAL,CAAWuD,QAAX,CAAoBP,IAApB;KADJ,MAEO;WACEhD,KAAL,CAAWwD,UAAX,CAAsBR,IAAtB;;;;;;AC5BZ,MAAMS,GAAG,GAAG,KAAZ;AACA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,QAAQ,GAAG,EAAjB;;AAEA,MAAMC,MAAM,GAAG,CAAC;EAACC,QAAD;EAAWC,QAAX;EAAqBC;CAAtB,KACXF,QAAQ,GACF;EAAK,SAAS,EAAC;EADb,GAEF;EAAK,SAAS,EAAC,oBAAf;EAAoC,OAAO,EAAE,MAAME,QAAQ,CAAC,CAACD,QAAF;GAAcA,QAAQ,GAAG,GAAH,GAAS,GAA1F,CAHV;;AAKA,MAAMvB,OAAK,GAAG,CAAC;EAACsB,QAAD;EAAWpB;CAAZ,KACVoB,QAAQ,GACF;EAAK,SAAS,EAAC;EADb,GAEF;EAAK,SAAS,EAAC,mBAAf;EAAmC,OAAO,EAAEpB;GAAW,GAAvD,CAHV;;AAKA,MAAMuB,IAAI,GAAG,CAAC;EAACC,IAAD;EAAOC,KAAP;EAAcJ,QAAd;EAAwBC,QAAxB;EAAkCR,QAAlC;EAA4CY,OAA5C;EAAqDf;CAAtD,KAAoE;QACvES,QAAQ,GAAG,CAACO,WAAW,CAACF,KAAD,CAA7B;SAEI;IAAK,SAAS,EAAEf,EAAE,CAAC,MAAD,EAAS;MAACC;KAAV;KACd,oBAAC,MAAD;IAAQ,QAAQ,EAAES,QAAlB;IAA4B,QAAQ,EAAEC,QAAtC;IAAgD,QAAQ,EAAEC;IAD9D,EAEI;IAAK,SAAS,EAAC,YAAf;IAA4B,OAAO,EAAE,MAAMR,QAAQ,CAACW,KAAD;KAAW,GAAEA,KAAK,CAAChB,KAAM,IAAGgB,KAAK,CAACb,IAAK,EAA1F,CAFJ,EAGI,oBAACd,OAAD;IAAO,QAAQ,EAAEsB,QAAjB;IAA2B,OAAO,EAAE,MAAMM,OAAO,CAACD,KAAD;IAHrD,CADJ;CAFJ;;AAWA,MAAMG,QAAN,SAAuBxE,KAAK,CAACC,SAA7B,CAAuC;EACnCC,WAAW,CAACC,KAAD,EAAO;UAERA,KAAN;SACKsE,MAAL,GAAc,IAAd;SACKrE,KAAL,GAAa;MAAC6D,QAAQ,EAAE9D,KAAK,CAAC8D,QAAN,IAAkB,KAA7B;MAAoCS,UAAU,EAAE;KAA7D;SACKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBnE,IAAhB,CAAqB,IAArB,CAAlB;;;EAEJO,MAAM,GAAE;UACE;MAACsD,KAAD;MAAQD,IAAR;MAAcV,QAAd;MAAwBY,OAAxB;MAAiCM,QAAQ,GAAC,IAA1C;MAAgD7B;QAAgB,KAAK5C,KAA3E;UACM;MAAC8D,QAAD;MAAWS;QAAc,KAAKtE,KAApC;WAEI;MAAK,SAAS,EAAEkD,EAAE,CAAC,gBAAD,EAAkB;QAACc;OAAnB,CAAlB;MAA6C,GAAG,EAAES,EAAE,IAAI,KAAKJ,MAAL,GAAcI;OACjED,QAAQ,IACT,oBAAC,IAAD;MACI,KAAK,EAAEP,KADX;MAEI,IAAI,EAAED,IAFV;MAGI,QAAQ,EAAEH,QAHd;MAII,QAAQ,EAAElB,YAAY,KAAKsB,KAJ/B;MAKI,QAAQ,EAAE,KAAKM,UALnB;MAMI,QAAQ,EAAEjB,QANd;MAOI,OAAO,EAAEY;MATjB,EAUK,CAACL,QAAQ,IAAIS,UAAZ,IAA0B,CAACE,QAA5B,KAAyCP,KAAK,CAAC7E,QAA/C,IACG;MAAK,SAAS,EAAE8D,EAAE,CAAC,eAAD,EAAiB;QAACW,QAAQ,EAAE,KAAK9D,KAAL,CAAW8D;OAAvC;OACd;MAAK,SAAS,EAAC;OACVI,KAAK,CAAC7E,QAAN,CAAe0D,GAAf,CAAmB,CAAC4B,KAAD,EAAO1B,CAAP,KAChB,oBAAC,QAAD;MACI,GAAG,EAAEA,CADT;MAEI,IAAI,EAAE,KAFV;MAGI,KAAK,EAAE0B,KAHX;MAII,YAAY,EAAE/B,YAJlB;MAKI,QAAQ,EAAEW,QALd;MAMI,OAAO,EAAEY;MAPhB,CADL,CADJ,CAXR,CADJ;;;EA4BJS,kBAAkB,CAACC,UAAD,EAAaC,SAAb,EAAuB;QACjCC,cAAJ;;aAESC,aAAT,GAAwB;MACpBD,cAAc,CAACE,SAAf,CAAyBC,OAAzB,CAAiC,WAAjC,EAA6C,UAA7C;MACAH,cAAc,CAACzF,KAAf,CAAqBwB,MAArB,GAA8B,MAA9B;MACAiE,cAAc,CAACI,mBAAf,CAAmC,eAAnC,EAAmDH,aAAnD;;;UAGEI,cAAc,GAAG,MAAM;MACzBL,cAAc,CAACE,SAAf,CAAyBI,MAAzB,CAAgC,YAAhC,EAA6C,UAA7C;MACAN,cAAc,CAACI,mBAAf,CAAmC,eAAnC,EAAmDC,cAAnD;WACK5E,QAAL,CAAc;QAACsD,QAAQ,EAAE,KAAX;QAAkBS,UAAU,EAAE;OAA5C;KAHJ;;QAMI,KAAKtE,KAAL,CAAW6D,QAAX,IAAuBgB,SAAS,CAAChB,QAAV,KAAuB,KAAlD,EAAwD;MACpDiB,cAAc,GAAG,KAAKT,MAAL,CAAYgB,aAAZ,CAA0B,gBAA1B,CAAjB;YACM;QAACC;UAAgBR,cAAc,CAACS,UAAtC;MACAT,cAAc,CAACE,SAAf,CAAyBQ,GAAzB,CAA6B,WAA7B;MACAV,cAAc,CAACzF,KAAf,CAAqBwB,MAArB,GAA+B,GAAEyE,YAAa,IAA9C;MACAR,cAAc,CAACW,gBAAf,CAAgC,eAAhC,EAAgDV,aAAhD;KALJ,MAMO,IAAIF,SAAS,CAAChB,QAAV,IAAsB,KAAK7D,KAAL,CAAW6D,QAAX,KAAwB,KAAlD,EAAwD;MAC3DiB,cAAc,GAAG,KAAKT,MAAL,CAAYgB,aAAZ,CAA0B,gBAA1B,CAAjB;YACM;QAACC;UAAgBR,cAAc,CAACS,UAAtC;MACAT,cAAc,CAACE,SAAf,CAAyBQ,GAAzB,CAA6B,YAA7B;MACAV,cAAc,CAACzF,KAAf,CAAqBwB,MAArB,GAA+B,GAAEyE,YAAa,IAA9C;MACAI,UAAU,CAAC,MAAM;QACbZ,cAAc,CAACzF,KAAf,CAAqBwB,MAArB,GAA+B,KAA/B;QACAiE,cAAc,CAACW,gBAAf,CAAgC,eAAhC,EAAgDN,cAAhD;OAFM,EAGR,GAHQ,CAAV;;;;EAORZ,UAAU,CAACV,QAAD,EAAU;QACZA,QAAQ,KAAK,KAAjB,EAAuB;WACdtD,QAAL,CAAc;QAACsD,QAAD;QAAWS,UAAU,EAAE;OAArC;KADJ,MAEO;WACE/D,QAAL,CAAc;QAACsD,QAAD;QAAWS,UAAU,EAAE;OAArC;;;;;;AAKZ,AAAe,MAAMqB,gBAAN,SAA+B/F,KAAK,CAACC,SAArC,CAA+C;EAC1DC,WAAW,CAACC,KAAD,EAAO;UACRA,KAAN;SACK6F,cAAL,GAAsB,IAAtB;SACK5F,KAAL,GAAa;MACT6F,QAAQ,EAAE9F,KAAK,CAAC+F,IADP;MAETC,WAAW,EAAEhG,KAAK,CAAC+F,IAFV;MAGTpD,KAAK,EAAEsD,UAAU,CAACjG,KAAK,CAAC+F,IAAP,EAAa,GAAb,CAHR;MAITG,QAAQ,EAAE,IAJD;MAKTC,aAAa,EAAE,IALN;MAMTvD,YAAY,EAAE;KANlB;SASKwD,UAAL,GAAkB,KAAKA,UAAL,CAAgB/F,IAAhB,CAAqB,IAArB,CAAlB;SACKgG,SAAL,GAAiB,KAAKA,SAAL,CAAehG,IAAf,CAAoB,IAApB,CAAjB;SACKiG,SAAL,GAAiB,KAAKA,SAAL,CAAejG,IAAf,CAAoB,IAApB,CAAjB;;;EAGJC,yBAAyB,CAACC,SAAD,EAAW;UAC1B;MAACwF;QAAQxF,SAAf;;QACIwF,IAAI,KAAK,KAAK/F,KAAL,CAAW+F,IAAxB,EAA6B;WACpBvF,QAAL,CAAc;QACVsF,QAAQ,EAAEC,IADA;QAEVC,WAAW,EAAED,IAFH;QAGVpD,KAAK,EAAEsD,UAAU,CAACF,IAAD,EAAOA,IAAI,CAAC7C,KAAZ,CAHP;QAIVgD,QAAQ,EAAE,IAJA;QAKVC,aAAa,EAAE,IALL;QAMVvD,YAAY,EAAE;OANlB;;;;EAWRhC,MAAM,GAAG;UACC;MAACoF,WAAD;MAAcE,QAAd;MAAwBC,aAAxB;MAAuCxD,KAAvC;MAA8CC;QAAgB,KAAK3C,KAAzE;UACM;MAACY,KAAD;MAAQC,MAAR;MAAgBxB,KAAK,GAACqE,QAAtB;MAA+BoC,IAAI,GAAC;QAAQ,KAAK/F,KAAvD;UACMuG,MAAM,GAAGP,WAAW,KAAKD,IAA/B;;QACIA,IAAI,KAAK,IAAb,EAAkB;aACP;QAAK,SAAS,EAAC,kBAAf;QAAkC,KAAK,EAAE,EAAC,GAAGzG,KAAJ;UAAWuB,KAAX;UAAkBC;;QAAlE;;;WAGA;MAAK,SAAS,EAAC,kBAAf;MAAkC,KAAK,EAAE;QAACD,KAAD;QAAQC;;OAC7C;MAAK,SAAS,EAAC;OACX,oBAAC0F,UAAD;MAAM,KAAK,EAAE7D,KAAb;MAAoB,UAAU,EAAE,KAAK2D,SAArC;MAAgD,QAAQ,EAAE,KAAKF,UAA/D;MAA2E,YAAY,EAAExD;MAD7F,CADJ,EAII;MAAK,SAAS,EAAC,iBAAf;MAAiC,GAAG,EAAE8B,EAAE,IAAI,KAAKmB,cAAL,GAAsBnB;OAC9D;MAAK,SAAS,EAAEyB,aAAa,KAAKzC,GAAlB,GAAwB,eAAxB,GAA0C;OACtD,oBAAC,QAAD;MACI,KAAK,EAAEsC,WADX;MAEI,IAAI,EAAEO,MAFV;MAGI,YAAY,EAAE3D,YAHlB;MAII,QAAQ,EAAE,KAJd;MAKI,QAAQ,EAAE,IALd;MAMI,QAAQ,EAAE,KAAKwD,UANnB;MAOI,OAAO,EAAE,KAAKC;MARtB,CADJ,EAWKH,QAAQ,IACT;MAAK,SAAS,EAAEC,aAAa,KAAKzC,GAAlB,GAAwB,eAAxB,GAA0C;OACtD,oBAAC,QAAD;MAAU,KAAK,EAAEwC,QAAjB;MAA2B,IAAI,EAAE,KAAjC;MAAwC,QAAQ,EAAE,KAAlD;MAAyD,QAAQ,EAAE;MADvE,CAZJ,CAJJ,CADJ;;;EAyBJtB,kBAAkB,CAAC6B,SAAD,EAAY3B,SAAZ,EAAsB;UAC9B4B,YAAY,GAAG,MAAM;WAClBb,cAAL,CAAoBZ,SAApB,CAA8BI,MAA9B,CAAqC,SAArC;WACK7E,QAAL,CAAc;QAACwF,WAAW,EAAE,KAAK/F,KAAL,CAAWiG,QAAzB;QAAmCA,QAAQ,EAAE,IAA7C;QAAmDC,aAAa,EAAE;OAAhF;WACKN,cAAL,CAAoBL,UAApB,CAA+BL,mBAA/B,CAAmD,eAAnD,EAAoEuB,YAApE;KAHJ;;QAKI5B,SAAS,CAACoB,QAAV,KAAuB,IAAvB,IAA+B,KAAKjG,KAAL,CAAWiG,QAAX,KAAwB,IAA3D,EAAgE;MAC5DP,UAAU,CAAC,MAAM;aACRE,cAAL,CAAoBZ,SAApB,CAA8BQ,GAA9B,CAAkC,SAAlC;aACKI,cAAL,CAAoBL,UAApB,CAA+BE,gBAA/B,CAAgD,eAAhD,EAAiEgB,YAAjE;OAFM,EAGP,GAHO,CAAV;;;;EAORN,UAAU,CAACxD,YAAD,EAAc;SACfpC,QAAL,CAAc;MAACoC;KAAf;;QACI,KAAK5C,KAAL,CAAW2G,YAAf,EAA4B;WACnB3G,KAAL,CAAW2G,YAAX,CAAwB/D,YAAxB;;;;EAIRyD,SAAS,CAACnC,KAAD,EAAO;UACNvB,KAAK,GAAGsD,UAAU,CAAC,KAAKhG,KAAL,CAAW6F,QAAZ,EAAsB5B,KAAK,CAAChB,KAA5B,CAAxB;SACK1C,QAAL,CAAc;MAAC0F,QAAQ,EAAEhC,KAAX;MAAkBiC,aAAa,EAAEzC,GAAjC;MAAsCf;KAApD;;;EAGJ2D,SAAS,CAACpC,KAAD,EAAO;UACNvB,KAAK,GAAGsD,UAAU,CAAC,KAAKhG,KAAL,CAAW6F,QAAZ,EAAsB5B,KAAK,CAAChB,KAA5B,CAAxB;SACK1C,QAAL,CAAc;MAAC0F,QAAQ,EAAEhC,KAAX;MAAkBiC,aAAa,EAAE1C,GAAjC;MAAsCd;KAApD;;;;;AAKR,MAAMyB,WAAW,GAAGF,KAAK,IAAIA,KAAK,CAAC7E,QAAN,IAAkB6E,KAAK,CAAC7E,QAAN,CAAeyD,MAAf,GAAwB,CAAvE;;;;"}