{
  "version": 3,
  "sources": ["../src/requestHandlers.ts"],
  "sourcesContent": ["/* global require:false */\n\nconst services = {};\nconst serviceAPI = {};\n\nexport function configure(config) {\n  console.log(`requestHandler.configure ${JSON.stringify(config, null, 2)}`);\n\n  config.services.forEach(async ({ name, module, API }) => {\n    console.log(`about to import ${module}`);\n    // TODO roll these up into async functions we can invoke in parallel\n    const service = await import(module);\n    services[name] = service;\n    API.forEach((messageType) => (serviceAPI[messageType] = name));\n    console.log(`configure service ${name} `);\n    await service.configure(config);\n  });\n}\n\nexport function findHandler(type) {\n  const serviceName = serviceAPI[type];\n  if (serviceName) {\n    return services[serviceName][type];\n  }\n}\n\nexport function killSubscriptions(clientId, queue) {\n  Object.keys(services).forEach((name) => {\n    const killSubscription = services[name]['unsubscribeAll'];\n    if (killSubscription) {\n      killSubscription(clientId, queue);\n    }\n  });\n}\n"],
  "mappings": "AAEA,MAAM,WAAW,CAAC;AAClB,MAAM,aAAa,CAAC;AAEb,SAAS,UAAU,QAAQ;AAChC,UAAQ,IAAI,4BAA4B,KAAK,UAAU,QAAQ,MAAM,CAAC,GAAG;AAEzE,SAAO,SAAS,QAAQ,OAAO,EAAE,MAAM,QAAQ,IAAI,MAAM;AACvD,YAAQ,IAAI,mBAAmB,QAAQ;AAEvC,UAAM,UAAU,MAAM,OAAO;AAC7B,aAAS,QAAQ;AACjB,QAAI,QAAQ,CAAC,gBAAiB,WAAW,eAAe,IAAK;AAC7D,YAAQ,IAAI,qBAAqB,OAAO;AACxC,UAAM,QAAQ,UAAU,MAAM;AAAA,EAChC,CAAC;AACH;AAEO,SAAS,YAAY,MAAM;AAChC,QAAM,cAAc,WAAW;AAC/B,MAAI,aAAa;AACf,WAAO,SAAS,aAAa;AAAA,EAC/B;AACF;AAEO,SAAS,kBAAkB,UAAU,OAAO;AACjD,SAAO,KAAK,QAAQ,EAAE,QAAQ,CAAC,SAAS;AACtC,UAAM,mBAAmB,SAAS,MAAM;AACxC,QAAI,kBAAkB;AACpB,uBAAiB,UAAU,KAAK;AAAA,IAClC;AAAA,EACF,CAAC;AACH;",
  "names": []
}
