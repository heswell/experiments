
.material-icons {
	font-size: 18px;	
	vertical-align: top;
}

.Grid {


	color: #333;
	font-size: 11px;
	font-family: 'Roboto', sans-serif;
}

.Grid, .Grid div {
	box-sizing: border-box;
	user-select: none;	
}

.GridCell .num {
	display: inline-block;
}

.GridCell.center .num {
    display: inline-block;
    width: 60%;
    max-width: 80px;
}

.Grid .num {
	font-family:arial;
    color: black;
}

.GridCell .flasher { text-align:left; }
.GridCell  .flasher + .num { padding-left: 8px; }

.GridCell.right .flasher { text-align: right;}
.GridCell.right .flasher + .num { padding-right: 8px; }

.up1 > .flasher {
	animation-duration: 3s;
	animation-name : reactbgup1;
}

.up2 > .flasher {
	animation-duration: 3s;
	animation-name : reactbgup2;
}

.down1 > .flasher {
	animation-duration: 3s;
	animation-name : reactbgdown1;
}

.down2 > .flasher {
	animation-duration: 3s;
	animation-name : reactbgdown2;
}

.up1.arrow-only > .flasher {
	animation-duration: 30s;
	animation-name : reactarrowup1;
}

.up2.arrow-only > .flasher {
	animation-duration: 30s;
	animation-name : reactarrowup2;
}

.down1.arrow-only > .flasher {
	animation-duration: 30s;
	animation-name : reactarrowdown1;
}

.down2.arrow-only > .flasher {
	animation-duration: 30s;
	animation-name : reactarrowdown2;
}

.up1.arrow > .flasher {
	animation-duration: 30s;
	animation-name : reactbgarrowup1;	
}

.up2.arrow > .flasher {
	animation-duration: 30s;
	animation-name : reactbgarrowup2;	
}

.down1.arrow > .flasher {
	animation-duration: 30s;
	animation-name : reactbgarrowdown1;	
}

.down2.arrow > .flasher {
	animation-duration: 30s;
	animation-name : reactbgarrowdown2;	
}

.Grid .loading-data-message {
	height: 100%;
	width: 100%;
	font-size: 14px;
	vertical-align: middle;
	text-align: center;
} 

.Grid .loading-data-message div {
	top: 50%;
	position: relative;
	margin: -10px auto 0 auto;
	height: 20px;
	line-height: 20px;
	color: white;
}


.Grid.empty .Viewport {
	display: none;
}

.Grid.empty.no-header .Header {
	display: none;
}

.Header {
	background: #eaeaea;
}

.GroupHeader {
	height: 100%;
	overflow: hidden;
}


.group-heading .InnerHeaderCell {
	font-weight: normal;
}

.Viewport {
	background-color: white;
}

.CanvasScroller.horizontal {
	position: absolute;
	bottom: 0;
	height: 15px;
	overflow-x: scroll;
	overflow-y: hidden;
	scroll-behavior: smooth;
}

.Canvas::-webkit-scrollbar,
.scrollable-content::-webkit-scrollbar {
	width: 15px;
	height: 15px;
}

.Canvas::-webkit-scrollbar-thumb,
.scrollable-content::-webkit-scrollbar-thumb {
	border: 3px solid rgba(0, 0, 0, 0);
	border-left: 3px solid rgba(0, 0, 0, 0);
	border-right: 3px solid rgba(0, 0, 0, 0);
	background-clip: content-box;
	box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);
	border-radius: 10px;
	background-color: rgb(204, 204, 204);
	width: 12px;
}

.Canvas::-webkit-scrollbar-track,
.scrollable-content::-webkit-scrollbar-track {
	border: 3px solid rgba(0, 0, 0, 0);
	border-left: 3px solid rgba(0, 0, 0, 0);
	border-right: 3px solid rgba(0, 0, 0, 0);
	background-clip: content-box;
	box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
	border-radius: 10px;
	width: 12px;
}

.Canvas::-webkit-scrollbar-corner,
.scrollable-content::-webkit-scrollbar-corner {
	background-color: rgb(30, 30, 30);
}

.GridRow {
	outline: 0;
	height: 23px;
	position:absolute;
	top:0;
	left:0;
	width: 100%;
}

.GridRow.even {
	background-color: #f3f3f3;
}

.GridRow.odd {
	background-color: #fdfdfd;
}

/*.GridRow:not(.selected):hover {
	background-color: rgb(120, 120, 120);
	border-top-left-radius: 5px;
	border-top-right-radius: 5px;
	border-bottom-left-radius: 5px;
	border-bottom-right-radius: 5px;
}
*/

/*
.GridRow.focused:not(.selected) .GridCell:not(.selected),
.GridRow:not(.selected):hover .GridCell:not(.selected),
.GridRow.focused:not(.selected) .GridCell.selected.bool,
.GridRow:not(.selected):hover .GridCell.selected.bool {
	border-right-color: rgb(120, 120, 120);
	border-bottom-color: rgb(120, 120, 120);
} 

.GridRow.focused:not(.selected) .GridCell:first-child,
.GridRow:not(.selected):hover .GridCell:first-child {
	border-bottom-left-radius: 5px;
} 

.GridRow.focused:not(.selected) .GridCell:last-child,
.GridRow:not(.selected):hover .GridCell:last-child {
	border-bottom-right-radius: 5px;
} 
*/
/*.GridRow.focused:not(.selected) {
	background-color: rgb(34, 61, 80);
}
*/
.GridRow.focused:not(.selected) .GridCell:not(.selected) {
	border-right-color: rgb(34, 61, 80);
	border-bottom-color: rgb(34, 61, 80);
}

.GridRow.selected {
	background-color: rgb(46, 100, 139);
	color: white;
}

.GridRow.selected:first-child,
.GridRow:not(.selected) + .GridRow.selected {
	border-top-left-radius: 5px; 
	border-top-right-radius: 5px; 
}

.GridRow.last-selected {
	border-bottom-left-radius: 5px; 
	border-bottom-right-radius: 5px; 
}

.GridRow.selected .GridCell:not(.selected) {
	border-right-color: rgb(46, 100, 139);
	border-bottom-color: rgb(46, 100, 139);
} 

.GridRow.last-selected .GridCell {
	border-bottom-color: rgba(30, 30, 30, 0.3);
}

.GridRow.selected .GridCell:last-child {
	border-right-color: rgba(0,0,0,0);
}

.GridCell {
	position: relative;
	display: inline-block;
	vertical-align: top;
	overflow:hidden;
	white-space: nowrap;
	padding: 0 12px;
	text-overflow: ellipsis;
	border-width: 0 1px 1px 0;
	border-style: solid;
	border-color: #d4d4d4;
	font-weight: normal;
	height: 100%;
	line-height: 22px;
	cursor: default;
    z-index:0;
}

.GridCell.checkbox {
	padding: 0 3px;
}

.GridCell.left { text-align:left; }
.GridCell.right { text-align:right;}
.GridCell.center { text-align:center; }
.GridCell.uppercase { text-transform: uppercase; }
.GridCell.lowercase { text-transform: lowercase; }
.GridCell.capitalize { text-transform: capitalize; }


.GridCell:focus{
	outline: none;	
}

.GridCell.checked {
	padding: 3px;
}

.GridCell.resizing {
	background-color: rgba(66, 139,202, 0.5);
}

.fixed.Canvas .GridCell {
	background-color: #f3f3f3;
}

.GridCell.selected:not(.bool) {
	border: solid 2px rgb(82, 146, 247);
	line-height: 18px;
}

.GridCell:focus {
	outline: none;
}

.GridCell.selected:not(.bool):not(.editing) {
	padding: 0 6px 0 4px;
}

.GridCell.selected.bool:not(.editing):before {
	content : ' ';
	position: absolute;
	line-height:1;
	text-align: center;
	left: 3px;
	top: 3px;
	border-radius: 2px;
	height: 13px;
	width: 13px;
	border: solid 2px rgb(82, 146, 247);
	vertical-align: middle;
}


.GridCell.editable:focus {
	outline: none;
}

.GridCell.editing {
	padding:0;
}

.GridCell .Editor {
	width: 100%;
	height: 100%;
	border:none;
	margin:0;
	padding:0;
}

.GridCell.editing input {
	background-color: rgb(0,0,0);
	line-height: 19px;
	width: 100%;
	color: white;
	outline: none;
}

.Editor input[type='text'],
.Editor .CheckBox {
	font-size: 12px;
	line-height: 18px;
	display: block;
	height: 100%;
	width: 100%;
	border: none;
	font-family: arial, verdana, sans-serif;
}

.Editor input[type='text'] {
	padding: 0 6px 0 4px;
}

.Editor .CheckBox:before {
	border-color: rgb(82, 146, 247);
}


.Gutter .GroupHeader {
	background-color: white;
}

.ColumnBearer {
	position: absolute;
	top:0px;
	left:50px;
	width: 126px;
	height: 100%;
	z-index: 150;
	box-shadow: 0 6px 12px rgba(0,0,0,0.275);
	background-color: white;

}

.ColumnBearer .HeaderCell {
	background-color: var(--header-cell-highlight-bg);
}

.colgroup-header {
	display: inline-block;
	height: 100%;
	text-align: center;
	border-right: solid 1px #333;
	line-height: 24px;
	vertical-align: top;
}

.colgroup-header:not(.bottomless) {
	border-bottom: solid 1px #333;
}

.filter-button {
	flex: 0 0 18px;
	cursor: pointer;
	background-color: white;
	display: flex;
	flex-direction: column;
	align-items: stretch;
	justify-content: center;
	color: #888;
}

.filter-active .filter-button {
	color: black;
}

.HeaderCell .filter-input-container {
	flex: 1 1 auto;
}

.HeaderCell .filter-input {
	width: 100%;
	height: 100%;
	border: none;
}

.InlineFilter .filter-clear-button {
	flex: 0 0 18px;
	cursor: pointer;
	background-color: white;
	display: flex;
	flex-direction: column;
	align-items: stretch;
	justify-content: center;
	color: #888;
}

.filter-clear-button .material-icons {
	font-size: 14px;
}

.checkbox-list .GridRow.selected {
	background-color: inherit;
	color:inherit;
}

.GridRow.selected .GridCell:not(.selected) {
    border-right-color: #d4d4d4;
    border-bottom-color: #d4d4d4;
}

.checkbox-list .GridCell {
	padding-left: 0;
}
.checkbox-list .GridCell:not(:last-child) {
	border-right:none;
}

.checkbox-list .GridRow.even:not(.selected) {
	background-color: inherit;
}

.scrolling-canvas-container { 
	 transform: translate3d(0,0,0);

    /*background: repeating-linear-gradient(white 0px, white 22px,
      #d4d4d4 22px,
      #f3f3f3 23px,
      #f3f3f3 45px,
      white 46px);*/


}